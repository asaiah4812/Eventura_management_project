{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/types/providers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,gBAAgB,GAAG,QAAQ,kBAAkB,GAAG,KAAK;AAC7D,MAAM;AACN;AACA,QAAQ,kBAAkB,GAAG;AAC7B,MAAM;IACF,YAAY,GAAG,CAAE,CACjB;AACJ;AACA,QAAQ,gBAAgB,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/types/misc.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK","ignoreList":[0]}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/types/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,uJAAqC;AACrC,kJAAgC","ignoreList":[0]}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/utils/misc.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/utils/globals.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,QAAQ,SAAS,GAAG,KAAK;AAC7C,MAAM,UAAU,CAAC;AACjB,MAAM,YAAY,CAAC;IACf,OAAO,OAAO,CAAC,IAAI;AACvB;AACA,QAAQ,SAAS,GAAG;AACpB,MAAM,YAAY,CAAC,KAAK;IACpB,OAAO,CAAC,IAAI,GAAG;AACnB;AACA,QAAQ,SAAS,GAAG","ignoreList":[0]}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/utils/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,kJAAgC;AAChC,qJAAmC","ignoreList":[0]}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,mJAAiC;AACjC,mJAAiC","ignoreList":[0]}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/packages/utils/ConnectMethodUtils.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/packages/utils/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,+BAA+B,GAAG,QAAQ,6BAA6B,GAAG,KAAK;AACvF,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,iCAAiC;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,qBAAqB,6BAA6B;IAAE;AAAE;AACpK,OAAO,cAAc,CAAC,SAAS,mCAAmC;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,qBAAqB,+BAA+B;IAAE;AAAE","ignoreList":[0]}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/packages/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,mJAAiC","ignoreList":[0]}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/constants/values.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,wBAAwB,GAAG,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,QAAQ,UAAU,GAAG,QAAQ,QAAQ,GAAG,QAAQ,SAAS,GAAG,QAAQ,MAAM,GAAG,KAAK;AAC3K,QAAQ,MAAM,GAAG;AACjB,QAAQ,SAAS,GAAG;AACpB,QAAQ,QAAQ,GAAG;AACnB,QAAQ,UAAU,GAAG;AACrB,QAAQ,OAAO,GAAG;AAClB,QAAQ,OAAO,GAAG,GAAG,QAAQ,QAAQ,CAAC,CAAC,EAAE,QAAQ,UAAU,CAAC,CAAC,EAAE,QAAQ,OAAO,CAAC,CAAC,CAAC;AACjF,QAAQ,OAAO,GAAG;AAClB,QAAQ,wBAAwB,GAAG","ignoreList":[0]}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/constants/events.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,KAAK;AAC/B,QAAQ,eAAe,GAAG;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,oBAAoB;AACxB","ignoreList":[0]}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/constants/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,wJAAkC;AAClC,wJAAkC","ignoreList":[0]}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 985, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1143, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1331, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/eip155.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1805, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/sui.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1965, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1970, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/packages/utils/namespaces.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2218, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/packages/sign-client/client.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2431, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/solana.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2598, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/btc.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2734, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/aptos.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2866, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2871, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/ton.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3057, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/cosmos.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3193, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/tron.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3329, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/provider/providers/starknet.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3466, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/OKXUniversalProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4131, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/OKXBtcProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4517, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/OKXCosmosProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4770, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/OKXTonProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4926, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4931, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/OKXTronProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5124, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/OKXStarknetProvider.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5343, "column": 0}, "map": {"version":3,"sources":["file:///home/dreamer/Desktop/nextjs_project/event_management/node_modules/%40okxconnect/universal-provider/src/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,eAAe,GAAG,QAAQ,cAAc,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,cAAc,GAAG,QAAQ,oBAAoB,GAAG,KAAK;AAC1K,mJAA0C;AAC1C,6IAAoC;AACpC,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,uBAAuB,oBAAoB;IAAE;AAAE;AACpJ,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,kBAAkB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,iBAAiB,cAAc;IAAE;AAAE;AAClI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,qBAAqB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,oBAAoB,iBAAiB;IAAE;AAAE;AAC3I,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,kBAAkB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,iBAAiB,cAAc;IAAE;AAAE;AAClI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,mBAAmB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,kBAAkB,eAAe;IAAE;AAAE;AACrI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,uBAAuB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,sBAAsB,mBAAmB;IAAE;AAAE;AACjJ,sHAA0C","ignoreList":[0]}},
    {"offset": {"line": 5412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}